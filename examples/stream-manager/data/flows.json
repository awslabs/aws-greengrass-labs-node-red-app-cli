[
    {
        "id": "5e6b6be3.b55864",
        "type": "tab",
        "label": "Insert and read all",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cff1262d1c305705",
        "type": "tab",
        "label": "Read from sequence number",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f0dfe8ea80b91328",
        "type": "tab",
        "label": "Continous reading",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d9dfb54f4d598876",
        "type": "tab",
        "label": "Reliable processing",
        "disabled": false,
        "info": ""
    },
    {
        "id": "bf36e22027482d68",
        "type": "subflow",
        "name": "Persisted Reader",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 620,
                "y": 220,
                "wires": [
                    {
                        "id": "ce9bcbb5d4ba2505"
                    },
                    {
                        "id": "81c3fee5a3e4975d"
                    },
                    {
                        "id": "b04352093cc740de"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 540,
                "y": 220,
                "wires": [
                    {
                        "id": "a03f94a77562ee98",
                        "port": 0
                    },
                    {
                        "id": "6ba5c623f1e07c6a",
                        "port": 1
                    },
                    {
                        "id": "81c3fee5a3e4975d",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "inputLabels": [
            "nextSequence"
        ],
        "outputLabels": [
            "nextSequence"
        ],
        "status": {
            "x": 1000,
            "y": 400,
            "wires": [
                {
                    "id": "b04352093cc740de",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "b537301847f9d4b0",
        "type": "stream-config",
        "streamName": "simple",
        "strategyOnFull": "OverwriteOldestData",
        "maxSize": "",
        "streamSegmentSize": "",
        "flushOnWrite": false,
        "name": "simple"
    },
    {
        "id": "ecc4c42802d69f85",
        "type": "stream-config",
        "streamName": "persistence",
        "strategyOnFull": "OverwriteOldestData",
        "maxSize": "1024",
        "streamSegmentSize": "1024",
        "flushOnWrite": true,
        "name": "persistence"
    },
    {
        "id": "7e93b0eada640737",
        "type": "stream-config",
        "streamName": "test",
        "strategyOnFull": "OverwriteOldestData",
        "maxSize": "",
        "streamSegmentSize": "",
        "flushOnWrite": false,
        "name": "test"
    },
    {
        "id": "6b8daa8cebec71b2",
        "type": "stream-write",
        "z": "5e6b6be3.b55864",
        "stream": "7e93b0eada640737",
        "name": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "cc582e2528eba30c"
            ],
            [
                "cc582e2528eba30c"
            ]
        ]
    },
    {
        "id": "dbc1ddc8e45f8134",
        "type": "inject",
        "z": "5e6b6be3.b55864",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "$string($now(), prettify)\t",
        "payloadType": "jsonata",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "6b8daa8cebec71b2"
            ]
        ]
    },
    {
        "id": "cc582e2528eba30c",
        "type": "debug",
        "z": "5e6b6be3.b55864",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 180,
        "wires": []
    },
    {
        "id": "a00e92f23f60b84c",
        "type": "stream-read",
        "z": "5e6b6be3.b55864",
        "stream": "7e93b0eada640737",
        "name": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "f5f724765bdefdc3"
            ],
            [
                "ad2b7596583bd5b4"
            ],
            []
        ]
    },
    {
        "id": "6c23a001f6d3453c",
        "type": "inject",
        "z": "5e6b6be3.b55864",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "a00e92f23f60b84c"
            ]
        ]
    },
    {
        "id": "f6cf1246cb5cfcd3",
        "type": "stream-write",
        "z": "d9dfb54f4d598876",
        "stream": "b537301847f9d4b0",
        "name": "write to stream",
        "x": 560,
        "y": 160,
        "wires": [
            [
                "a01243078a24ca3d"
            ],
            []
        ]
    },
    {
        "id": "ed924fe109e2d86d",
        "type": "inject",
        "z": "d9dfb54f4d598876",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 180,
        "y": 160,
        "wires": [
            [
                "3fe4b75f224c347a"
            ]
        ]
    },
    {
        "id": "a01243078a24ca3d",
        "type": "debug",
        "z": "d9dfb54f4d598876",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 160,
        "wires": []
    },
    {
        "id": "46626e933992c15b",
        "type": "stream-write",
        "z": "bf36e22027482d68",
        "stream": "ecc4c42802d69f85",
        "name": "write last sequence to stream",
        "x": 1070,
        "y": 220,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ce9bcbb5d4ba2505",
        "type": "function",
        "z": "bf36e22027482d68",
        "name": "store last seq read",
        "func": "if (!msg.eob) {\n    b = Buffer.alloc(8);\n    b.writeBigUInt64BE(BigInt(msg.nextSequenceNumber));\n    msg.payload = b;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 220,
        "wires": [
            [
                "46626e933992c15b"
            ]
        ]
    },
    {
        "id": "463e4a32d8a5f3e0",
        "type": "stream-read",
        "z": "bf36e22027482d68",
        "stream": "ecc4c42802d69f85",
        "name": "read last sequence from stream",
        "x": 250,
        "y": 340,
        "wires": [
            [
                "a03f94a77562ee98"
            ],
            [],
            []
        ]
    },
    {
        "id": "a03f94a77562ee98",
        "type": "function",
        "z": "bf36e22027482d68",
        "name": "set desired seq number",
        "func": "msg_new = {}\nmsg_new.payload = msg.payload.readBigUInt64BE();\nmsg_new.nextSequenceNumber = Number(msg_new.payload);\nreturn msg_new;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 220,
        "wires": [
            [
                "b04352093cc740de"
            ]
        ]
    },
    {
        "id": "a4a6435eda7488ad",
        "type": "stream-describe",
        "z": "bf36e22027482d68",
        "stream": "ecc4c42802d69f85",
        "name": "get last index in stream",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "6ba5c623f1e07c6a"
            ],
            []
        ]
    },
    {
        "id": "6ba5c623f1e07c6a",
        "type": "function",
        "z": "bf36e22027482d68",
        "name": "use last sequence number from stream",
        "func": "var msg_other = {}\nmsg_other.nextSequenceNumber = 0\nif (msg.payload.storageStatus.newestSequenceNumber >= 0) { \n msg.nextSequenceNumber = msg.payload.storageStatus.newestSequenceNumber;\n node.send([msg, null]);\n return;\n}\n\nnode.send([null, msg_other]);",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 440,
        "wires": [
            [
                "463e4a32d8a5f3e0"
            ],
            [
                "b04352093cc740de"
            ]
        ]
    },
    {
        "id": "349e7cb458888733",
        "type": "subflow:bf36e22027482d68",
        "z": "d9dfb54f4d598876",
        "name": "",
        "env": [],
        "x": 490,
        "y": 440,
        "wires": [
            [
                "e54211ea05897f03",
                "809e78589c75705f"
            ]
        ]
    },
    {
        "id": "fa044a93e71c3f16",
        "type": "debug",
        "z": "d9dfb54f4d598876",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 520,
        "wires": []
    },
    {
        "id": "809e78589c75705f",
        "type": "stream-read",
        "z": "d9dfb54f4d598876",
        "stream": "b537301847f9d4b0",
        "name": "read from stream",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "db885209614e16be"
            ],
            [],
            []
        ]
    },
    {
        "id": "d7c1da6ac727c8c7",
        "type": "inject",
        "z": "bf36e22027482d68",
        "name": "trigger on start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 200,
        "y": 600,
        "wires": [
            [
                "a4a6435eda7488ad"
            ]
        ]
    },
    {
        "id": "b04352093cc740de",
        "type": "function",
        "z": "bf36e22027482d68",
        "name": "",
        "func": "\nmsg.payload = {\n    \"text\": `Next seq: ${msg.nextSequenceNumber}`\n}\nif (msg.eos) {\n    msg.payload.fill = \"yellow\";\n} else {\n    msg.payload.fill = \"blue\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3fe4b75f224c347a",
        "type": "function",
        "z": "d9dfb54f4d598876",
        "name": "",
        "func": "msg.payload = Buffer.from(msg.payload.toString())\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "f6cf1246cb5cfcd3"
            ]
        ]
    },
    {
        "id": "db885209614e16be",
        "type": "function",
        "z": "d9dfb54f4d598876",
        "name": "",
        "func": "\n\nvar x = Math.random()*100;\nif (msg.eos)\n{ \n  node.send([msg, null]);\n} else {\n    msg.payload = msg.payload.toString(\"utf-8\");\n    if (x < 80) {\n        msg.nextSequenceNumber = msg.metadata.sequenceNumber+1;\n        node.send([msg, msg]);\n        return;\n    } else {\n        node.error(`Error: could not process ${msg.payload}`);\n        msg.nextSequenceNumber = msg.metadata.sequenceNumber;\n        node.send([msg, null]);\n    }\n}\n\n\n\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 440,
        "wires": [
            [
                "349e7cb458888733"
            ],
            [
                "fa044a93e71c3f16"
            ]
        ]
    },
    {
        "id": "e54211ea05897f03",
        "type": "debug",
        "z": "d9dfb54f4d598876",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 440,
        "wires": []
    },
    {
        "id": "81c3fee5a3e4975d",
        "type": "function",
        "z": "bf36e22027482d68",
        "name": "pass-through remove eos",
        "func": "delete msg.eos;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ad2b7596583bd5b4",
        "type": "debug",
        "z": "5e6b6be3.b55864",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "f5f724765bdefdc3",
        "type": "function",
        "z": "5e6b6be3.b55864",
        "name": "",
        "func": "msg.payload = msg.payload.toString(\"utf-8\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 220,
        "wires": [
            [
                "cc582e2528eba30c"
            ]
        ]
    },
    {
        "id": "973b1ef8e1e7e5c5",
        "type": "debug",
        "z": "cff1262d1c305705",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 280,
        "wires": []
    },
    {
        "id": "be59e5a6c51086ef",
        "type": "stream-read",
        "z": "cff1262d1c305705",
        "stream": "7e93b0eada640737",
        "name": "",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "ce1062bb04f60f2b"
            ],
            [
                "17e22acc82fd6da4"
            ],
            []
        ]
    },
    {
        "id": "c766c5da581a2d30",
        "type": "inject",
        "z": "cff1262d1c305705",
        "name": "",
        "props": [
            {
                "p": "desiredStartSequenceNumber",
                "v": "4",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 320,
        "wires": [
            [
                "be59e5a6c51086ef"
            ]
        ]
    },
    {
        "id": "17e22acc82fd6da4",
        "type": "debug",
        "z": "cff1262d1c305705",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 360,
        "wires": []
    },
    {
        "id": "ce1062bb04f60f2b",
        "type": "function",
        "z": "cff1262d1c305705",
        "name": "",
        "func": "msg.payload = msg.payload.toString(\"utf-8\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 280,
        "wires": [
            [
                "973b1ef8e1e7e5c5"
            ]
        ]
    },
    {
        "id": "9c01ea985a0dfa7a",
        "type": "debug",
        "z": "f0dfe8ea80b91328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 200,
        "wires": []
    },
    {
        "id": "9833f9982b8de447",
        "type": "stream-read",
        "z": "f0dfe8ea80b91328",
        "stream": "7e93b0eada640737",
        "name": "test",
        "x": 430,
        "y": 220,
        "wires": [
            [
                "1c56296a69d83d02"
            ],
            [
                "657a60dead630fde"
            ],
            []
        ]
    },
    {
        "id": "838852247b54497f",
        "type": "inject",
        "z": "f0dfe8ea80b91328",
        "name": "",
        "props": [
            {
                "p": "desiredStartSequenceNumber",
                "v": "4",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "9833f9982b8de447"
            ]
        ]
    },
    {
        "id": "1c56296a69d83d02",
        "type": "function",
        "z": "f0dfe8ea80b91328",
        "name": "",
        "func": "if (msg.payload) {\n    msg.payload = msg.payload.toString(\"utf-8\");\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "9c01ea985a0dfa7a"
            ]
        ]
    },
    {
        "id": "657a60dead630fde",
        "type": "function",
        "z": "f0dfe8ea80b91328",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "9833f9982b8de447"
            ]
        ]
    }
]
